PrimeFaces.locales['es'] = {
    closeText: 'Cerrar',
    prevText: 'Anterior',
    nextText: 'Siguiente',
    monthNames: ['Enero','Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
    monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun','Jul','Ago','Sep','Oct','Nov','Dic'],
    dayNames: ['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'],
    dayNamesShort: ['Dom','Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'],
    dayNamesMin: ['D','L','M','X','J','V','S'],
    weekHeader: 'Semana',
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix: '',
    timeOnlyTitle: 'Sólo hora',
    timeText: 'Tiempo',
    hourText: 'Hora',
    minuteText: 'Minuto',
    secondText: 'Segundo',
    currentText: 'Fecha actual',
    ampm: false,
    month: 'Mes',
    week: 'Semana',
    day: 'Día',
    allDayText : 'Todo el día',
    messages: {
        'javax.faces.component.UIInput.REQUIRED': '{0}: Error de validación: El valor es requerido.', 
        'javax.faces.converter.IntegerConverter?.INTEGER': '{2}: \'{0}\' debe ser un número de uno o más dígitos.', 
        'javax.faces.converter.IntegerConverter?.INTEGER_detail': '{2}: \'{0}\' debe ser un número entre -2147483648 y 2147483647 por ejemplo: {1}', 
        'javax.faces.converter.DoubleConverter?.DOUBLE': '{2}: \'{0}\' debe ser un número de uno o más dígitos.', 
        'javax.faces.converter.DoubleConverter?.DOUBLE_detail': '{2}: \'{0}\' debe ser un número entre 4.9E-324 y 1.7976931348623157E308 por ejemplo: {1}', 
        'javax.faces.converter.BigDecimalConverter?.DECIMAL': '{2}: \'{0}\' debe ser un número decimal con signo.', 
        'javax.faces.converter.BigDecimalConverter?.DECIMAL_detail': '{2}: \'{0}\' debe ser un número decimal con signo de uno o más dígitos, que puede estar seguido por un separador decimal y uno o más dígitos. Por ejemplo: {1}', 
        'javax.faces.converter.BigIntegerConverter?.BIGINTEGER': '{2}: \'{0}\' debe ser un número de uno o más dígitos.', 
        'javax.faces.converter.BigIntegerConverter?.BIGINTEGER_detail': '{2}: \'{0}\' debe ser un número de uno o más dígitos. Por ejemplo: {1}', 
        'javax.faces.converter.ByteConverter?.BYTE': '{2}: \'{0}\' debe ser un número entre 0 y 255.', 'javax.faces.converter.ByteConverter?.BYTE_detail': '{2}: \'{0}\' debe ser un número entre 0 y 255. Por ejemplo: {1}', 
        'javax.faces.converter.CharacterConverter?.CHARACTER': '{1}: \'{0}\' debe ser un caracter válido.', 
        'javax.faces.converter.CharacterConverter?.CHARACTER_detail': '{1}: \'{0}\' debe ser un caracter ASCII válido.', 
        'javax.faces.converter.ShortConverter?.SHORT': '{2}: \'{0}\' debe ser un número de uno o más dígitos.', 
        'javax.faces.converter.ShortConverter?.SHORT_detail': '{2}: \'{0}\' debe ser un número entre -32768 y 32767. Por ejemplo: {1}', 
        'javax.faces.converter.BooleanConverter?.BOOLEAN': '{1}: \'{0}\' debe ser \'true\' o \'false\'', 
        'javax.faces.converter.BooleanConverter?.BOOLEAN_detail': '{1}: \'{0}\' debe ser \'true\' o \'false\'. Cualquier valor diferente de \'true\' será evaluado a \'false\'.', 
        'javax.faces.validator.LongRangeValidator?.MAXIMUM': '{1}: Error de validación: El valor es mayor al máximo permitido de \'{0}\'', 
        'javax.faces.validator.LongRangeValidator?.MINIMUM': '{1}: Error de validación: El valor es menor al mínimo permitido de \'{0}\'', 
        'javax.faces.validator.LongRangeValidator?.NOT_IN_RANGE': '{2}: Error de validación: El atributo especificado no está entre los valores esperados {0} y {1}.', 
        'javax.faces.validator.LongRangeValidator?.TYPE={0}': 'Error de validación: El valor no es del tipo correcto.', 
        'javax.faces.validator.DoubleRangeValidator?.MAXIMUM': '{1}: Error de validación: El valor es mayor al máximo permitido de \'{0}\'', 
        'javax.faces.validator.DoubleRangeValidator?.MINIMUM': '{1}: Error de validación: El valor es menor al mínimo permitido de \'{0}\'', 
        'javax.faces.validator.DoubleRangeValidator?.NOT_IN_RANGE': '{2}: Error de validación: El atributo especificado no está entre los valores esperados {0} y {1}', 
        'javax.faces.validator.DoubleRangeValidator?.TYPE={0}': 'Error de validación: El valor no es del tipo correcto.', 
        'javax.faces.converter.FloatConverter?.FLOAT': '{2}: \'{0}\' debe ser un número de uno o más dígitos.', 
        'javax.faces.converter.FloatConverter?.FLOAT_detail': '{2}: \'{0}\' debe ser un número entre 1.4E-45 y 3.4028235E38. Por ejemplo: {1}', 
        'javax.faces.converter.DateTimeConverter?.DATE': '{2}: \'{0}\' no puede ser interpretado como una fecha.', 
        'javax.faces.converter.DateTimeConverter?.DATE_detail': '{2}: \'{0}\' no puede ser interpretado como una fecha. Por ejemplo: {1}', 
        'javax.faces.converter.DateTimeConverter?.TIME': '{2}: \'{0}\' no puede ser interpretado como un horario.', 
        'javax.faces.converter.DateTimeConverter?.TIME_detail': '{2}: \'{0}\' no puede ser interpretado como un horario. Por ejemplo: {1}', 
        'javax.faces.converter.DateTimeConverter?.DATETIME': '{2}: \'{0}\' no puede ser interpretado como una fecha y hora.', 
        'javax.faces.converter.DateTimeConverter?.DATETIME_detail': '{2}: \'{0}\' no puede ser interpretado como una fecha y hora. Por ejemplo: {1}', 
        'javax.faces.converter.DateTimeConverter?.PATTERN_TYPE': '{1}: el atributo \'pattern\' o \'type\' debe ser especificado para convertir el valor \'{0}\'', 
        'javax.faces.converter.NumberConverter?.CURRENCY': '{2}: \'{0}\' no puede ser interpretado como un valor de importe.', 
        'javax.faces.converter.NumberConverter?.CURRENCY_detail': '{2}: \'{0}\' no puede ser interpretado como un valor de importe. Por ejemplo: {1}', 
        'javax.faces.converter.NumberConverter?.PERCENT': '{2}: \'{0}\' no puede ser interpretado como un porcentaje.', 
        'javax.faces.converter.NumberConverter?.PERCENT_detail': '{2}: \'{0}\' no puede ser interpretado como un porcentaje. Por ejemplo: {1}', 
        'javax.faces.converter.NumberConverter?.NUMBER': '{2}: \'{0}\' could not be understood as a date.', 
        'javax.faces.converter.NumberConverter?.NUMBER_detail': '{2}: \'{0}\' no es un número. Por ejemplo: {1}', 
        'javax.faces.converter.NumberConverter?.PATTERN': '{2}: \'{0}\' no es un patrón numérico.', 
        'javax.faces.converter.NumberConverter?.PATTERN_detail': '{2}: \'{0}\' no es un patrón numérico. Por ejemplo: {1}', 
        'javax.faces.validator.LengthValidator?.MINIMUM': '{1}: Error de validación: La longitud es menor que la mínima permitida \'{0}\'', 
        'javax.faces.validator.LengthValidator?.MAXIMUM': '{1}: Error de validación: La longitud es mayor que la máxima permitida \'{0}\'', 
        'javax.faces.validator.RegexValidator?.PATTERN_NOT_SET': 'Debe configurar una expresión regular.', 
        'javax.faces.validator.RegexValidator?.PATTERN_NOT_SET_detail': 'Debe configurar una expresión regular válida.', 
        'javax.faces.validator.RegexValidator?.NOT_MATCHED': 'No hubo coincidencias con la expresión regular.', 
        'javax.faces.validator.RegexValidator?.NOT_MATCHED_detail': 'No hubo coincidencias con la expresión regular \'{0}\'.', 
        'javax.faces.validator.RegexValidator?.MATCH_EXCEPTION': 'Error en la expresión regular.', 
        'javax.faces.validator.RegexValidator?.MATCH_EXCEPTION_detail': 'Error en la expresión regular, \'{0}\'' 
    }     
};